name: r2s-immo
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ENABLE_DHCP:
        description: '是否开启DHCP'     
        required: false
        default: 'false'
        type: boolean
        
      OP_IP:
        description: '静态IP地址'     
        required: false
        default: '192.168.1.2' 
        type: string
        
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  #FEEDS_CONF: immo/feeds.conf.default
  CONFIG_FILE: immo/r2s.config
  DIY_SH: immo/r2s-rockchip.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai


jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    
    - name: 可用磁盘空间 (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: 检测
      uses: actions/checkout@v4
      
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        # sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/Huanyueyichen/openwrt-list/master/openwrt-ubuntu-2204)
        sudo -E apt-get -qq install libfuse-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 初始化变量
      run: |
        echo "ENABLE_DHCP=${{ github.event.inputs.ENABLE_DHCP }}" >> $GITHUB_ENV
        echo "OP_IP=${{ github.event.inputs.OP_IP }}" >> $GITHUB_ENV

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 更新 feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装 feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH
        
        if [[ "${{ github.event.inputs.ENABLE_DHCP }}" == "true" ]]; then
          ls openwrt/files/etc/uci-defaults
        else
          rm -rf openwrt/files/etc/uci-defaults/dhcp-lan
          sed -i "s/192.168.1.1/${{ github.event.inputs.OP_IP }}/" openwrt/package/base-files/files/bin/config_generate
          ls openwrt/files/etc/uci-defaults
        fi   
        done

    - name: 下载 package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make V=s -j1
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -rf config.buildinfo
        rm -rf feeds.buildinfo
        rm -rf sha256sums
        rm -rf profiles.json
        rm -rf version.buildinfo
        rm -rf immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-rootfs.tar.gz
        rm -rf immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s.manifest
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 生成释放标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d")-immo" >> $GITHUB_OUTPUT
        echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
        touch release.txt
        echo " 静  态IP：${{ github.event.inputs.OP_IP }}
               DHCP状态：${{ github.event.inputs.ENABLE_DHCP }}
               默认密码：无>> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 上传固件发布
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }} immortalwrt
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
        
    - name: 删除工作流运行
      uses: Mattraks/delete-workflow-runs@v2
      with:
          retain_days: 1
          keep_minimum_runs: 1

    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@v0.3.3
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 20
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
